def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.2'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.arvin.flutter_parse_html"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file("../key.keystore")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
        release {
            storeFile file("../key.keystore")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            ndk{
                //这里其实我觉可以直接是用"armeabi-v7a"，但国内几个大哥之前使用的都是"armeabi"
                abiFilters "armeabi-v7a"
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.151_44051_sharewithdownloadwithfile_withoutGame_obfs_20210524_174029.jar')
    testImplementation 'junit:junit:4.12'
    implementation  'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.1.0'
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
//PushSDK
    implementation 'com.umeng.umsdk:push:6.0.1'
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.shuyu:gsyVideoPlayer-java:8.1.0'

//是否需要ExoPlayer模式
    implementation 'com.shuyu:GSYVideoPlayer-exo2:8.1.0'
    implementation 'com.shuyu:gsyVideoPlayer-armv7a:8.1.0'
    implementation 'com.shuyu:gsyVideoPlayer-arm64:8.1.0'
    implementation 'com.ldoublem.loadingview:loadingviewlib:1.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.14.1'
}
